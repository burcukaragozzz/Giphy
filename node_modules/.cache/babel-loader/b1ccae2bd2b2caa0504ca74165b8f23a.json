{"ast":null,"code":"var _jsxFileName = \"/Users/burcu.karagoz/Project2/giphy/src/App.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\n\nclass Gif extends React.Component {\n  render() {\n    return React.createElement(\"li\", {\n      className: \"gif-wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.props.url,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass GifList extends React.Component {\n  render() {\n    const results = this.props.data;\n    let gifs = results.map(gif => React.createElement(Gif, {\n      url: gif.images.fixed_height.url,\n      key: gif.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }));\n    return React.createElement(\"ul\", {\n      className: \"gif-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, gifs);\n  }\n\n}\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      gifs: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(this.props.dataURL).then(response => response.json()).then(responseData => {\n      this.setState({\n        gifs: responseData.data\n      });\n    }).catch(error => {\n      console.log('Error fetching and parsing data', error);\n    });\n  }\n\n  render() {\n    console.log(this.state.gifs);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Giphy featured gifs\"), React.createElement(GifList, {\n      data: this.state.gifs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }));\n  }\n\n}\n\nReactDOM.render(React.createElement(App, {\n  dataURL: \"https://api.giphy.com/v1/gifs/trending?api_key=dc6zaTOxFJmzC\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59\n  },\n  __self: this\n}), document.getElementById('root'));\nexport default App;","map":{"version":3,"sources":["/Users/burcu.karagoz/Project2/giphy/src/App.js"],"names":["React","ReactDOM","Gif","Component","render","props","url","GifList","results","data","gifs","map","gif","images","fixed_height","id","App","constructor","state","componentDidMount","fetch","dataURL","then","response","json","responseData","setState","catch","error","console","log","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAChCC,EAAAA,MAAM,GAAG;AACP,WACA;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAG,KAAKC,KAAL,CAAWC,GAAtB;AAA4B,MAAA,GAAG,EAAC,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADA;AAKD;;AAP+B;;AAUlC,MAAMC,OAAN,SAAsBP,KAAK,CAACG,SAA5B,CAAsC;AACpCC,EAAAA,MAAM,GAAG;AACP,UAAMI,OAAO,GAAG,KAAKH,KAAL,CAAWI,IAA3B;AACA,QAAIC,IAAI,GAAGF,OAAO,CAACG,GAAR,CAAaC,GAAG,IAAI,oBAAC,GAAD;AAAK,MAAA,GAAG,EAAEA,GAAG,CAACC,MAAJ,CAAWC,YAAX,CAAwBR,GAAlC;AAAuC,MAAA,GAAG,EAAEM,GAAG,CAACG,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApB,CAAX;AAEA,WACE;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIL,IADJ,CADF;AAKD;;AAVmC;;AAatC,MAAMM,GAAN,SAAkBhB,KAAK,CAACG,SAAxB,CAAkC;AAChCc,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXR,MAAAA,IAAI,EAAE;AADK,KAAb;AAGD;;AAEDS,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,KAAKf,KAAL,CAAWgB,OAAZ,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,YAAY,IAAI;AACpB,WAAKC,QAAL,CAAc;AAAEhB,QAAAA,IAAI,EAAEe,YAAY,CAAChB;AAArB,OAAd;AACD,KAJH,EAKGkB,KALH,CAKSC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CF,KAA/C;AACD,KAPH;AAQD;;AAEDxB,EAAAA,MAAM,GAAG;AACPyB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAWR,IAAvB;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAE,KAAKQ,KAAL,CAAWR,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AA3B+B;;AA8BlCT,QAAQ,CAACG,MAAT,CACE,oBAAC,GAAD;AAAK,EAAA,OAAO,EAAC,8DAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEE2B,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF;AAKA,eAAehB,GAAf","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\n\nclass Gif extends React.Component {\n  render() {\n    return (\n    <li className=\"gif-wrap\">\n      <img src={ this.props.url } alt=\"\"/>\n    </li>\n    );\n  }; \n}\n\nclass GifList extends React.Component {\n  render() {\n    const results = this.props.data;\n    let gifs = results.map( gif => <Gif url={gif.images.fixed_height.url} key={gif.id} /> );\n                           \n    return (\n      <ul className=\"gif-list\">\n        { gifs }\n      </ul>\n    );\n  }\n}\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      gifs: []\n    };\n  } \n  \n  componentDidMount() {\n    fetch(this.props.dataURL)\n      .then(response => response.json())\n      .then(responseData => {\n        this.setState({ gifs: responseData.data });\n      })\n      .catch(error => {\n        console.log('Error fetching and parsing data', error);\n      });\n  }\n  \n  render() {\n    console.log(this.state.gifs);\n    return (\n      <div>\n        <h1>Giphy featured gifs</h1>\n        <GifList data={this.state.gifs} />\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <App dataURL='https://api.giphy.com/v1/gifs/trending?api_key=dc6zaTOxFJmzC'/>,\n  document.getElementById('root')\n);\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}